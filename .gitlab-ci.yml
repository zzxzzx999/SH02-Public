image: docker:latest

services:
  - name: docker:dind
    entrypoint: ["--host=tcp://0.0.0.0:2375", "--host=unix:///var/run/docker.sock"]  # expose Docker daemon

stages:
  # - lint
  - build
  - test
  - save-images  # New stage to save Docker images

variables:
  BACKEND_DIR: "$CI_PROJECT_DIR/gap_project"
  FRONTEND_DIR: "$BACKEND_DIR/frontend"
  REPORTS_DIR: "$BACKEND_DIR/reports"
  DOCKER_DRIVER: overlay2
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG  # Define image tag dynamically

# Linting and build stages remain as they are

build-backend:
  stage: build
  image: python:3.12
  before_script:
    - cd $BACKEND_DIR
    - pip install -r requirements.txt  # Install backend dependencies
  script:
    - docker-compose -f docker-compose.yml build  # Build the backend image
    - docker save -o backend.tar $CI_REGISTRY_IMAGE:backend  # Save the backend image to a tar file
  artifacts:
    paths:
      - backend.tar  # Save Docker image as an artifact
  only:
    - production  # Only run on production branch
  #tags:
   # - deployment-docker  # Tag for the specific runner

build-frontend:
  stage: build
  image: node:22.11
  before_script:
    - cd "$FRONTEND_DIR"
    - npm install  # Install frontend dependencies
  script:
    - npm run build || echo "Build issues found"  # Build the frontend
    - docker save -o frontend.tar $CI_REGISTRY_IMAGE:frontend  # Save the frontend image to a tar file
  artifacts:
    paths:
      - frontend.tar  # Save Docker image as an artifact
  only:
    - production  # Only run on production branch
  #tags:
    # - deployment-docker  # Tag for the specific runner

# Save Docker images (this step is mostly informational)
save-images:
  stage: save-images
  script:
    - echo "Images have been saved locally."
  artifacts:
    paths:
      - backend.tar
      - frontend.tar  # Save both Docker images
  only:
    - production  # Only run on production branch
  # tags:
    # - deployment-docker  # Tag for the specific runner
