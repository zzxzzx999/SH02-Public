image: docker:latest

services:
  - name: docker:dind

stages:
 #- lint
  - build
  - test
  - save-images  # New stage to save Docker images

variables:
  BACKEND_DIR: "$CI_PROJECT_DIR/gap_project"
  FRONTEND_DIR: "$BACKEND_DIR/frontend"
  REPORTS_DIR: "$BACKEND_DIR/reports"
  DOCKER_DRIVER: overlay2
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

# Linting and build stages remain as they are

build-backend:
  stage: build
  image: python:3.12
  before_script:
    - cd $BACKEND_DIR
    - pip install -r requirements.txt
  script:
    - docker-compose -f docker-compose.yml build
    - docker save -o backend.tar ${DOCKER_USERNAME}/gordon-foley:backend  # Save image to file
  artifacts:
    paths:
      - backend.tar  # Save Docker image as artifact
  only:
    - production # change to staging
  tags:
    - deployment-docker

build-frontend:
  stage: build
  image: node:22.11
  before_script:
    - cd "$FRONTEND_DIR"
    - npm install
  script:
    - npm run build || echo "Build issues found"
    - docker save -o frontend.tar ${DOCKER_USERNAME}/gordon-foley:frontend  # Save image to file
  artifacts:
    paths:
      - frontend.tar  # Save Docker image as artifact
  only:
    - production
  tags:
    - deployment-docker

# Add tests back in

# Save Docker images
save-images:
  stage: save-images
  script:
    - echo "Images have been saved locally."
  artifacts:
    paths:
      - backend.tar
      - frontend.tar
  only:
    - production
  tags:
    - deployment-docker
